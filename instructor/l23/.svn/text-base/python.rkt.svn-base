;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-advanced-reader.ss" "lang")((modname python) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #t #t none #f ())))

;; python.rkt



;; Number -> Number
;; produce the given number times 2
(check-expect (times2 1) 2)
(check-expect (times2 3) 6)

(define (times2 n)
  (* 2 n))



;; String -> String
;; produce a summoning charm for o
(check-expect (accio "Firebolt") "accio Firebolt")

(define (accio n)
  (string-append "accio " n))





;; (listof Number) -> Number
;; produces the sum of a list of numbers
(check-expect (sum empty) 0)
(check-expect (sum (list 1 2 3 4)) 10)

(define (sum lon0)
  (local [(define (sum lon rsf)
            (cond [(empty? lon) rsf]
                  [else
                   (sum (rest lon) (+ rsf (first lon)))]))]
    (sum lon0 0)))



;; (listof Number) -> (listof Number)
;; produce a list of each number in lon times 2
(check-expect (doubles empty) empty)
(check-expect (doubles (list 1 2 3)) (list 2 4 6))

(define (doubles lon) 
  (map (lambda (n) (* n 2)) lon))



;; (listof Number) -> (listof Number)
;; produce a list of each number in lon times 2
(check-expect (triples empty) empty)
(check-expect (triples (list 1 2 3)) (list 3 6 9))

(define (triples lon0) 
  (local [(define (triples lon rsf)
            (cond [(empty? lon) rsf]
                  [else
                   (triples (rest lon) 
                            (append rsf
                                    (list (* 3 (first lon)))))]))]
    (triples lon0 empty)))

